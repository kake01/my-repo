# コード2.1
# name: Hello
# on: push
# jobs:
#   hello:
#     runs-on: ubuntu-latest
#     steps:
#       - run: echo  "Hello, world"
#       - uses: actions/checkout@v4

# コード2.4
# name: Manual
# on:
#   workflow_dispatch:
#     inputs:
#       greeting:
#         type: string
#         default: Hello
#         required: true
#         description: A cheerful word
# jobs:
#   run:
#     runs-on: ubuntu-latest
#     steps:
#       - run: echo "${{ inputs.greeting }}"

# コード2.5
# name: Schedule
# on:
#   schedule:
#     - cron: '*/15 * * * *'
# jobs:
#   run:
#     runs-on: ubuntu-latest
#     steps:
#       - run: date
# コード3.1
# name: Contexts
# on: push
# jobs:
#   print:
#     runs-on: ubuntu-latest
#     steps:
#       - run: echo "${{ github.actor }}"
# コード3.2
# name: Environment variables
# on: push
# jobs:
#   run:
#     runs-on: ubuntu-latest
#     env:
#       BRANCH: main
#     steps:
#       - run: echo "${BRANCH}"
#       - uses: actions/checkout@v4
#         with:
#           ref: ${{env.BRANCH}}
# コード3.3
# name: Override environment variables
# on: push
# env:
#   EXAMPLE: Defined by workflow level
# jobs:
#   print:
#     runs-on: ubuntu-latest
#     steps:
#       - run: echo "${EXAMPLE}"
#       - env:
#           EXAMPLE: Defined by step level
#         run: echo "$EXAMPLE"
# コード3.4
# TODO ここ大事 中間環境変数
# name: Intermediate environment variables
# on: push
# jobs:
#   print:
#     runs-on: ubuntu-latest
#     env:
#       ACTOR: ${{github.actor}}
#     steps:
#       - run: echo "${ACTOR}"
# コード3.5
# name: Variables
# on: push
# jobs:
#   print:
#     runs-on: ubuntu-latest
#     env:
#       USERNAME: ${{vars.USERNAME}}
#     steps:
#       - run: echo "${USERNAME}"
# コード3.6
# name: Secrets
# on: push
# jobs:
#     print:
#         runs-on: ubuntu-latest
#         env:
#             PASSWORD: ${{ secrets.PASSWORD }}
#         steps:
#             - run: echo "${PASSWORD}"
#             - run: echo "${PASSWORD:0:1} ${PASSWORD#?}"
# コード3.7
# name: Listerals
# on: push
# jobs:
#     print:
#         runs-on: ubuntu-latest
#         steps:
#             - run: printenv | grep 'LITERAL_'
#               env:
#                 LITERAL_NULL: ${{ null }}
#                 LITERAL_BOOLEAN: ${{ true }}
#                 LITERAL_NUMBER: ${{ 123 }}
#                 LITERAL_STRING: ${{ 'hell' }}
#                 LITERAL_OMIT_STRING: Word
# コード3.8
# name: Compare functions
# on: push
# jobs:
#     compare:
#         runs-on: ubuntu-latest
#         steps:
#             - run: printenv | grep '_FUNC'
#               env:
#                 CONTAINS_FUNC: ${{ contains('Hello','ell') }}
#                 STARTS_WITH_FUNC: ${{ startsWith('Hello','ell') }}
                # ENDS_WITH_FUNC: ${{ endsWith('Hello','o') }}
#コード3.9 
# name: Generate functions
# on: push
# jobs:
#     generate:
#         runs-on: ubuntu-latest
#         steps:
#             - run: printenv | grep '_FUNC'
#               env:
#                 CONTAINS_FUNC: ${{ format('{0},{1}.','Hi', 'World') }}
#                 JOIN_FUNC: ${{ join(github.event.*.html_url, ',') }}
# コード3.10
# name: JSON functions
# on: push
# jobs:
#     dump:
#         runs-on: ubuntu-latest
#         steps:
#             - run: echo "${CONTEXT}"
#               env:
#                 CONTEXT: ${{ toJson(github) }}
# コード3.11
# name: Hash functions
# on: push
# jobs:
#     hash:
#         runs-on: ubuntu-latest
#         steps:
#             - uses: actions/checkout@v4
#             - run: echo "${HASH}"
#               env:
#                 HASH: ${{ hashFiles('.github/workflows/*.yml')}}
# コード3.12
# name: Condtions
# on: push
# jobs:
#     skip-or-run:
#         runs-on: ubuntu-latest
#         steps:
#             - run: echo "Hello"
#               if: ${{ contains(github.run_id, '1')}}
# コード3.13
# name: Status check functions
# on: push
# jobs:
#     fail:
#         runs-on: ubuntu-latest
#         steps:
#             - run: exit 1
#             - run: echo "Hello"
#               if: ${{ failure()}}
# コード3.14
# name: Conditions workflow
# on: push
# jobs:
#     skip-or-run:
#         if: ${{github.actor == 'octocat'}}
#         runs-on: ubuntu-latest
#         steps:
#             - run: echo "Hello"
# コード3.15
# name: Naming
# on: push
# jobs:
#     print:
#         name: Super Useful Job
#         runs-on: ubuntu-latest
#         steps:
#             - name: Amazing Script
#               run: echo "Hello"
# コード3.16
# name: Run Name
# run-name: Run by @${{github.actor}}
# on: push
# jobs:
#     print:
#         runs-on: ubuntu-latest
#         steps:
#           - run: echo "Hello"
# コード3.17
# name: Missing share data
# on: push
# jobs:
#     share:
#         runs-on: ubuntu-latest
#         steps:
#           - run: export RESULT="hello"
#           - run: echo "${RESULT}"
# コード3.18
# name: GITHUB_OUTPUT
# on: push
# jobs:
#     share:
#         runs-on: ubuntu-latest
#         steps:
#           - id: source
#             run: echo "RESULT=Hello" >> "${GITHUB_OUTPUT}"
#           - env:
#                 RESULT: ${{steps.source.outputs.result}}
#             run: echo "${RESULT}"
# コード3.19
# name: GITHUB_ENV
# on: push
# jobs:
#     share:
#         runs-on: ubuntu-latest
#         steps:
#           - run: echo "RESULT=Hello" >> "${GITHUB_ENV}"
#           - run: echo "${RESULT}"
# コード3.20
# name: Comment
# on: pull_request
# jobs:
#     Comment:
#         runs-on: ubuntu-latest
#         permissions:
#             pull-requests: write
#             contents: read
#         steps:
#           - run: gh pr commit "${GITHUB_HEAD_REF}" --body "Hello, ${GITHUB_ACTOR}"
#             env:
#                 GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
# コード4.3
# name: Test
# on:
#     pull_request: 
#         paths: ['go/**/*.go']
# jobs:
#     test:
#         runs-on: ubuntu-latest
#         steps:
#             - uses: actions/checkout@v4
#             - uses: actions/setup-go@v5
#               with:
#                 go-version: '1.22'
#             - run: go test go/excellent/*.go
# コード4.6
# name: Static analysis
# on:
#   pull_request:
#     paths: ['.github/workflows/*.yml', '.github/workflows/*.yaml']
# defaults:
#   run:
#     shell: bash
# concurrency:
#   group: ${{ github.workflow }}-${{ github.ref }}
#   cancel-in-progress: true
# jobs:
#   lint:
#     runs-on: ubuntu-latest
#     timeout-minutes: 5
#     steps:
#       - uses: actions/checkout@v4
#       - run: |
#           docker run --rm -v "$(pwd):$(pwd)" -w "$(pwd)" rhysd/actionlint:latest
# コード4.7
# name: Timeout
# on: push
# jobs:
#   sleep:
#     runs-on: ubuntu-latest
#     timeout-minutes: 1
#     steps:
#       - run: sleep 120
# コード4.8
# name: Change shell
# on: push
# jobs:
#   print:
#     runs-on: ubuntu-latest
#     steps:
#       - shell: bash
#         run: echo "${SHELL}"
#       - shell: python
#         run: |
#           import os
#           print(os.environ['PATH'])
# コード4.9
# name: Concurrency
# on: push
# concurrency: ${{ github.workflow }} # Concurrencyグループへワークフロー名を指定
# jobs:
#   sleep:
#     runs-on: ubuntu-latest
#     steps:
#       - run: sleep 120
# コード4.10
name: Auto cancel
on: pull_request
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true # 同一グループのワークフローが実行中ならキャンセル
jobs:
  sleep:
    runs-on: ubuntu-latest
    steps:
      - run: sleep 120